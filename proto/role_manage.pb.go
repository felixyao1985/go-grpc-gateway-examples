// Code generated by protoc-gen-go. DO NOT EDIT.
// source: role_manage.proto

package test

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RepMenuList struct {
	PID                  int32    `protobuf:"varint,1,opt,name=PID,proto3" json:"PID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RepMenuList) Reset()         { *m = RepMenuList{} }
func (m *RepMenuList) String() string { return proto.CompactTextString(m) }
func (*RepMenuList) ProtoMessage()    {}
func (*RepMenuList) Descriptor() ([]byte, []int) {
	return fileDescriptor_8133aefc50029012, []int{0}
}

func (m *RepMenuList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepMenuList.Unmarshal(m, b)
}
func (m *RepMenuList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepMenuList.Marshal(b, m, deterministic)
}
func (m *RepMenuList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepMenuList.Merge(m, src)
}
func (m *RepMenuList) XXX_Size() int {
	return xxx_messageInfo_RepMenuList.Size(m)
}
func (m *RepMenuList) XXX_DiscardUnknown() {
	xxx_messageInfo_RepMenuList.DiscardUnknown(m)
}

var xxx_messageInfo_RepMenuList proto.InternalMessageInfo

func (m *RepMenuList) GetPID() int32 {
	if m != nil {
		return m.PID
	}
	return 0
}

type RepMenuView struct {
	ID                   int32    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RepMenuView) Reset()         { *m = RepMenuView{} }
func (m *RepMenuView) String() string { return proto.CompactTextString(m) }
func (*RepMenuView) ProtoMessage()    {}
func (*RepMenuView) Descriptor() ([]byte, []int) {
	return fileDescriptor_8133aefc50029012, []int{1}
}

func (m *RepMenuView) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepMenuView.Unmarshal(m, b)
}
func (m *RepMenuView) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepMenuView.Marshal(b, m, deterministic)
}
func (m *RepMenuView) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepMenuView.Merge(m, src)
}
func (m *RepMenuView) XXX_Size() int {
	return xxx_messageInfo_RepMenuView.Size(m)
}
func (m *RepMenuView) XXX_DiscardUnknown() {
	xxx_messageInfo_RepMenuView.DiscardUnknown(m)
}

var xxx_messageInfo_RepMenuView proto.InternalMessageInfo

func (m *RepMenuView) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

type MenuModel struct {
	ID                   int32    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	PID                  int32    `protobuf:"varint,2,opt,name=PID,proto3" json:"PID,omitempty"`
	CODE                 string   `protobuf:"bytes,3,opt,name=CODE,proto3" json:"CODE,omitempty"`
	URL                  string   `protobuf:"bytes,4,opt,name=URL,proto3" json:"URL,omitempty"`
	TYPE                 string   `protobuf:"bytes,5,opt,name=TYPE,proto3" json:"TYPE,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MenuModel) Reset()         { *m = MenuModel{} }
func (m *MenuModel) String() string { return proto.CompactTextString(m) }
func (*MenuModel) ProtoMessage()    {}
func (*MenuModel) Descriptor() ([]byte, []int) {
	return fileDescriptor_8133aefc50029012, []int{2}
}

func (m *MenuModel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MenuModel.Unmarshal(m, b)
}
func (m *MenuModel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MenuModel.Marshal(b, m, deterministic)
}
func (m *MenuModel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MenuModel.Merge(m, src)
}
func (m *MenuModel) XXX_Size() int {
	return xxx_messageInfo_MenuModel.Size(m)
}
func (m *MenuModel) XXX_DiscardUnknown() {
	xxx_messageInfo_MenuModel.DiscardUnknown(m)
}

var xxx_messageInfo_MenuModel proto.InternalMessageInfo

func (m *MenuModel) GetID() int32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *MenuModel) GetPID() int32 {
	if m != nil {
		return m.PID
	}
	return 0
}

func (m *MenuModel) GetCODE() string {
	if m != nil {
		return m.CODE
	}
	return ""
}

func (m *MenuModel) GetURL() string {
	if m != nil {
		return m.URL
	}
	return ""
}

func (m *MenuModel) GetTYPE() string {
	if m != nil {
		return m.TYPE
	}
	return ""
}

type Res struct {
	Code                 int32        `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	DataInfo             []*MenuModel `protobuf:"bytes,3,rep,name=data_info,json=dataInfo,proto3" json:"data_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Res) Reset()         { *m = Res{} }
func (m *Res) String() string { return proto.CompactTextString(m) }
func (*Res) ProtoMessage()    {}
func (*Res) Descriptor() ([]byte, []int) {
	return fileDescriptor_8133aefc50029012, []int{3}
}

func (m *Res) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Res.Unmarshal(m, b)
}
func (m *Res) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Res.Marshal(b, m, deterministic)
}
func (m *Res) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Res.Merge(m, src)
}
func (m *Res) XXX_Size() int {
	return xxx_messageInfo_Res.Size(m)
}
func (m *Res) XXX_DiscardUnknown() {
	xxx_messageInfo_Res.DiscardUnknown(m)
}

var xxx_messageInfo_Res proto.InternalMessageInfo

func (m *Res) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Res) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *Res) GetDataInfo() []*MenuModel {
	if m != nil {
		return m.DataInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*RepMenuList)(nil), "test.RepMenuList")
	proto.RegisterType((*RepMenuView)(nil), "test.RepMenuView")
	proto.RegisterType((*MenuModel)(nil), "test.MenuModel")
	proto.RegisterType((*Res)(nil), "test.Res")
}

func init() { proto.RegisterFile("role_manage.proto", fileDescriptor_8133aefc50029012) }

var fileDescriptor_8133aefc50029012 = []byte{
	// 264 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x91, 0xcf, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0x5d, 0x9b, 0x89, 0x79, 0x03, 0x75, 0x39, 0x05, 0x41, 0x2c, 0x41, 0xa4, 0x07, 0xe9,
	0x61, 0xfe, 0x09, 0x76, 0x87, 0xc2, 0x86, 0x23, 0xfe, 0x80, 0x9d, 0x46, 0xb4, 0x6f, 0xa5, 0xb0,
	0x35, 0x63, 0x89, 0x7a, 0xf1, 0x8f, 0x97, 0x97, 0xb9, 0xc0, 0xe6, 0xed, 0xc3, 0xf7, 0xfb, 0xe1,
	0xbd, 0xf6, 0x05, 0x86, 0x5b, 0xbb, 0xc2, 0xc5, 0xda, 0x74, 0xa6, 0xc1, 0x62, 0xb3, 0xb5, 0xde,
	0x0a, 0xe6, 0xd1, 0x79, 0x75, 0x03, 0x03, 0x8d, 0x9b, 0x29, 0x76, 0x9f, 0x93, 0xd6, 0x79, 0x71,
	0x09, 0xe9, 0xac, 0x2a, 0x65, 0x2f, 0xeb, 0xe5, 0x7d, 0x4d, 0xa8, 0xae, 0xa3, 0xf0, 0xd6, 0xe2,
	0xb7, 0x38, 0x87, 0x24, 0xf6, 0x49, 0x55, 0xaa, 0x06, 0x38, 0x75, 0x53, 0x5b, 0xe3, 0xea, 0xb8,
	0xdc, 0x4f, 0x4b, 0xe2, 0x34, 0x21, 0x80, 0x3d, 0x3e, 0x95, 0x63, 0x99, 0x66, 0xbd, 0x9c, 0xeb,
	0xc0, 0x64, 0xbd, 0xea, 0x89, 0x64, 0x21, 0x22, 0x24, 0xeb, 0x65, 0x3e, 0x1b, 0xcb, 0xfe, 0xce,
	0x22, 0x56, 0x73, 0x48, 0x35, 0x3a, 0xaa, 0x3e, 0x6c, 0x8d, 0x7f, 0x4b, 0x02, 0xd3, 0x80, 0xb5,
	0x6b, 0xc2, 0x1a, 0xae, 0x09, 0xc5, 0x3d, 0xf0, 0xda, 0x78, 0xb3, 0x68, 0xbb, 0xa5, 0x95, 0x69,
	0x96, 0xe6, 0x83, 0xd1, 0x45, 0x41, 0xff, 0x5b, 0xc4, 0x8f, 0xd5, 0x67, 0x64, 0x54, 0xdd, 0xd2,
	0x8e, 0x7e, 0x80, 0x51, 0x2c, 0x6e, 0x81, 0x3d, 0x9b, 0x2f, 0x14, 0xc7, 0xea, 0x15, 0xdf, 0x05,
	0x1a, 0x9d, 0x3a, 0x11, 0x77, 0xc0, 0xc2, 0xa9, 0x86, 0xfb, 0x30, 0x5e, 0xef, 0x9f, 0x17, 0x2e,
	0x76, 0xe8, 0x51, 0x74, 0xe0, 0xbd, 0x9f, 0x86, 0xe7, 0x78, 0xf8, 0x0d, 0x00, 0x00, 0xff, 0xff,
	0x01, 0xf7, 0x2e, 0x4a, 0xa3, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MenuClient is the client API for Menu service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MenuClient interface {
	Save(ctx context.Context, in *MenuModel, opts ...grpc.CallOption) (*Res, error)
	List(ctx context.Context, in *RepMenuList, opts ...grpc.CallOption) (*Res, error)
	View(ctx context.Context, in *RepMenuView, opts ...grpc.CallOption) (*Res, error)
}

type menuClient struct {
	cc *grpc.ClientConn
}

func NewMenuClient(cc *grpc.ClientConn) MenuClient {
	return &menuClient{cc}
}

func (c *menuClient) Save(ctx context.Context, in *MenuModel, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/test.Menu/Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *menuClient) List(ctx context.Context, in *RepMenuList, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/test.Menu/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *menuClient) View(ctx context.Context, in *RepMenuView, opts ...grpc.CallOption) (*Res, error) {
	out := new(Res)
	err := c.cc.Invoke(ctx, "/test.Menu/View", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MenuServer is the server API for Menu service.
type MenuServer interface {
	Save(context.Context, *MenuModel) (*Res, error)
	List(context.Context, *RepMenuList) (*Res, error)
	View(context.Context, *RepMenuView) (*Res, error)
}

func RegisterMenuServer(s *grpc.Server, srv MenuServer) {
	s.RegisterService(&_Menu_serviceDesc, srv)
}

func _Menu_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MenuModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MenuServer).Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/test.Menu/Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MenuServer).Save(ctx, req.(*MenuModel))
	}
	return interceptor(ctx, in, info, handler)
}

func _Menu_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RepMenuList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MenuServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/test.Menu/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MenuServer).List(ctx, req.(*RepMenuList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Menu_View_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RepMenuView)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MenuServer).View(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/test.Menu/View",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MenuServer).View(ctx, req.(*RepMenuView))
	}
	return interceptor(ctx, in, info, handler)
}

var _Menu_serviceDesc = grpc.ServiceDesc{
	ServiceName: "test.Menu",
	HandlerType: (*MenuServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Save",
			Handler:    _Menu_Save_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Menu_List_Handler,
		},
		{
			MethodName: "View",
			Handler:    _Menu_View_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "role_manage.proto",
}
